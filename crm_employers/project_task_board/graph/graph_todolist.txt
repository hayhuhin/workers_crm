
1.save the created data for each user. - DONE
2.fix the visuals - DONE
3.add functionallity to the graph buttons(refresh query(up to 5 times,edit the query,remove graph))
4.add line graph option (not only the bar graph) - DONE
5.the presentation must be sorted by years - DONE


return render will have function inside one of the attr that checks for graph db records and will display accordingly the data

>>post request :  graph query >> class that queries the DB and records it >> the recorded db query will be represented in the frontend.

the record itself is saved and quered as nosql db because
i have to store graph data as lists 

questions:
1.how to migrate mongodb into the django project - DONE
a.the db will be stored in the cloud or in the vps db 
b.the django app will perform CRUD functions with a python library "pymongo"

2.the structure of the keys in the db - represented in the "mongodb_example.txt"
3.how am i inserting and getting the data from the db - by the mongodb class
4.what is the django convenient way of using nosql db - most of it by creating a class that handles the CRUD operations with pymongo library
5.how good the performance of using the db - simple queries that i am using have a good performance due its simplicity


###########################################################
#mongodb class creation steps#
steps:
1.find the specific user.
2.enter the graph_records >> records >> latest_one by the last index.

class creation:
the class will handle :
1.connection to the server
2.CRUD operations
3.methods that returns the desired data in a dict structure 

unit testing required for all possible fail cases while using the class methods

###########################################################

REMINDER:
need to modify the insert data method - DONE
need to add delete method - DONE
need to delete the test data that i have inserted in david users collection - DONE


now new steps to get the representation of the graph
classes i have :
1.mongodb constructor that can do CRUD operations and can store graph data
2.graph_representation that accepts the data and returns an html that represented in the page

steps that i have to do:

1.the data that i accept from the user must be stored in the mongodb - DONE
2.every time the page reloads the data quiried from the mongodb and represented by the graph_repr class - DONE

change the graph_calculator to represent the data as dict - DONE

mongodb connector tasks:
create method that checks if the user exists or hes new and create for him the mongodb record - DONE 
